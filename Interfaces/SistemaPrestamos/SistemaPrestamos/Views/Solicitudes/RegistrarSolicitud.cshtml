@{
    ViewData["Title"] = "Solicitud de Préstamo";
    var materiales = Model as List<SistemaPrestamos.Models.Material>;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solicitud de Préstamo - Sistema de Préstamo de Material Educativo</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
        <a class="navbar-brand" href="@Url.Action("Index", "Home")">Sistema de Préstamo de Material Educativo</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "Home")">Salir</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-5">
        <h3>Solicitud de Préstamo</h3>
        <div id="materialList">
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="categoria">Categoría</label>
                    <select id="categoria" class="form-control">
                        <option value="TODOS" selected>TODOS</option>
                        <option value="Libros">Libros</option>
                        <option value="Herramientas de estudio">Herramientas de estudio</option>
                        <option value="Instrumento musical">Instrumento musical</option>
                        <option value="Tecnología">Tecnología</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="buscar">Buscar</label>
                    <div class="input-group">
                        <input type="search" id="buscar" class="form-control" placeholder="Buscar...">
                        <div class="input-group-append">
                            <button class="btn btn-primary" onclick="filtrarMateriales()">Buscar</button>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-bordered table-light">
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Tipo</th>
                        <th>Stock</th>
                        <th>Cantidad</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="materiales-lista">
                    @foreach (var material in materiales)
                    {
                        <tr class="material-row" data-tipo="@material.Tipo" data-id="@material.CodMaterial">
                            <td>@material.CodMaterial</td>
                            <td>@material.Nombre</td>
                            <td>@material.Descripcion</td>
                            <td>@material.Tipo</td>
                            <td>@material.Stock</td>
                            <td><input type="number" class="form-control cantidad-material" data-id="@material.CodMaterial" placeholder="0" min="0" style="width: 60px;"></td>
                            <td>
                                <button class="btn btn-primary ver-material" data-id="@material.CodMaterial" onclick="mostrarDetalleMaterial(this)">Ver</button>
                                <button class="btn btn-primary agregar-material" data-id="@material.CodMaterial" onclick="agregarMaterial(this)">Agregar</button>
                                <button class="btn btn-danger eliminar-material" data-id="@material.CodMaterial" onclick="eliminarMaterial(this)" style="display: none;">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <input type="hidden" id="alumnoCodUsuario" value="2" />
        <button class="btn btn-primary mt-3" onclick="solicitarPrestamo()">Solicitar</button>
    </div>

    <!-- Modal Detalle Material -->
    <div class="modal fade" id="detalleMaterialModal" tabindex="-1" aria-labelledby="detalleMaterialModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detalleMaterialModalLabel">Detalle del Material</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Código del Material:</strong> <span id="detalleCodMaterial"></span></p>
                    <p><strong>Nombre del Material:</strong> <span id="detalleNombreMaterial"></span></p>
                    <p><strong>Descripción:</strong> <span id="detalleDescripcion"></span></p>
                    <p><strong>Tipo:</strong> <span id="detalleTipo"></span></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Incluyendo Bootstrap JS y dependencias -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        const carrito = [];
        // Función para filtrar materiales por categoría y búsqueda
        function filtrarMateriales() {
            var categoria = document.getElementById("categoria").value.toUpperCase();
            var buscar = document.getElementById("buscar").value.toUpperCase();
            var rows = document.querySelectorAll(".material-row");

            rows.forEach(function (row) {
                var nombre = row.querySelector("td:nth-child(2)").innerText.toUpperCase();
                var descripcion = row.querySelector("td:nth-child(3)").innerText.toUpperCase();
                var rowTipo = row.getAttribute("data-tipo").toUpperCase();

                if ((categoria === "TODOS" || rowTipo === categoria) &&
                    (nombre.includes(buscar) || descripcion.includes(buscar))) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        // Función para mostrar detalle del material en un modal
        function mostrarDetalleMaterial(button) {
            var row = button.closest("tr");
            document.getElementById("detalleCodMaterial").innerText = row.querySelector("td:nth-child(1)").innerText;
            document.getElementById("detalleNombreMaterial").innerText = row.querySelector("td:nth-child(2)").innerText;
            document.getElementById("detalleDescripcion").innerText = row.querySelector("td:nth-child(3)").innerText;
            document.getElementById("detalleTipo").innerText = row.querySelector("td:nth-child(4)").innerText;

            $('#detalleMaterialModal').modal('show');
        }

        // Función para agregar un material a la solicitud
        function agregarMaterial(button) {
            const row = button.closest("tr");
            const id = row.getAttribute("data-id");
            const cantidadInput = row.querySelector(".cantidad-material");
            const cantidad = cantidadInput.value;
            const nombre = row.cells[0].innerText;

            const materialExistente = carrito.find(m => m.id === id);
            if (materialExistente) {
                materialExistente.cantidad = parseInt(materialExistente.cantidad) + parseInt(cantidad);
            } else {
                carrito.push({ id, nombre, cantidad });
            }

            row.querySelector(".eliminar-material").style.display = "inline-block";
            button.style.display = "none";
        }

        function eliminarMaterial(button) {
            const row = button.closest("tr");
            const id = row.getAttribute("data-id");

            const index = carrito.findIndex(m => m.id === id);
            if (index !== -1) {
                carrito.splice(index, 1);
            }

            row.querySelector(".agregar-material").style.display = "inline-block";
            button.style.display = "none";
        }

        function solicitarPrestamo() {
            const alumnoCodUsuario = document.getElementById('alumnoCodUsuario').value;
            if (carrito.length === 0) {
                alert('Debe agregar al menos un material.');
                return;
            }

            const solicitudes = carrito.map(material => {
                return fetch('@Url.Action("RegistrarSolicitud", "Solicitudes")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        alumnoCodUsuario: parseInt(alumnoCodUsuario),
                        materialCod: parseInt(material.id),
                        cantidad: parseInt(material.cantidad)
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Actualiza el stock en la interfaz
                            const row = document.querySelector(`.material-row[data-id="${material.id}"]`);
                            const stockCell = row.querySelector("td:nth-child(5)");
                            const currentStock = parseInt(stockCell.innerText);
                            const newStock = currentStock - parseInt(material.cantidad);
                            stockCell.innerText = newStock;
                            return `Solicitud registrada con éxito para ${material.nombre}`;
                        } else {
                            return `Error al registrar la solicitud para ${material.nombre}: ${data.message}`;
                        }
                    })
                    .catch(error => {
                        return `Error al registrar la solicitud para ${material.nombre}`;
                    });
            });

            Promise.all(solicitudes).then(results => {
                results.forEach(result => alert(result));

                // Limpiar carrito
                carrito.length = 0;

                // Restablecer campos de cantidad y botones
                document.querySelectorAll('.cantidad-material').forEach(input => {
                    input.value = '';
                });

                document.querySelectorAll('.agregar-material').forEach(button => {
                    button.style.display = 'inline-block';
                });

                document.querySelectorAll('.eliminar-material').forEach(button => {
                    button.style.display = 'none';
                });

            });
        }


    </script>
</body>
</html>
